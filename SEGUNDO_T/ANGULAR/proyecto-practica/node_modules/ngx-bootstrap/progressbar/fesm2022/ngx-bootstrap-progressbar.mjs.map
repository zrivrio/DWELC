{"version":3,"file":"ngx-bootstrap-progressbar.mjs","sources":["../../../../src/progressbar/bar.component.ts","../../../../src/progressbar/bar.component.html","../../../../src/progressbar/progressbar.config.ts","../../../../src/progressbar/progressbar.component.ts","../../../../src/progressbar/progressbar.component.html","../../../../src/progressbar/progressbar.module.ts","../../../../src/progressbar/ngx-bootstrap-progressbar.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\n\nimport { ProgressbarType } from './progressbar-type.interface';\n\n@Component({\n    selector: 'bar',\n    templateUrl: './bar.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        role: 'progressbar',\n        'aria-valuemin': '0',\n        '[class.progress-bar]': 'true',\n        '[class.progress-bar-animated]': 'animate',\n        '[class.progress-bar-striped]': 'striped',\n        '[attr.aria-valuenow]': 'value',\n        '[attr.aria-valuetext]': 'percent ? percent.toFixed(0) + \"%\" : \"\"',\n        '[attr.aria-valuemax]': 'max',\n        '[style.height.%]': '\"100\"',\n        '[style.width.%]': 'percent'\n    },\n    standalone: true\n})\nexport class BarComponent implements OnChanges {\n  /** maximum total value of progress element */\n  @Input() max = 100;\n\n  /** current value of progress bar */\n  @Input() value? = 0;\n\n  /** if `true` changing value of progress bar will be animated */\n  @Input() animate? = false;\n\n  /** If `true`, striped classes are applied */\n  @Input() striped? = false;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type?: ProgressbarType = 'info';\n\n  percent = 100;\n\n  private _prevType?: string;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes[\"value\"] || changes[\"max\"]) {\n      this.percent = 100 * (Number(changes[\"value\"]?.currentValue || this.value)\n        / Number((changes[\"max\"]?.currentValue || this.max) || 100));\n    }\n\n    if (changes[\"type\"]) {\n      this.applyTypeClasses();\n    }\n  }\n\n  private applyTypeClasses(): void {\n    if (this._prevType) {\n      const barTypeClass = `progress-bar-${this._prevType}`;\n      const bgClass = `bg-${this._prevType}`;\n      this.renderer.removeClass(this.el.nativeElement, barTypeClass);\n      this.renderer.removeClass(this.el.nativeElement, bgClass);\n      this._prevType = void 0;\n    }\n\n    if (this.type) {\n      const barTypeClass = `progress-bar-${this.type}`;\n      const bgClass = `bg-${this.type}`;\n      this.renderer.addClass(this.el.nativeElement, barTypeClass);\n      this.renderer.addClass(this.el.nativeElement, bgClass);\n      this._prevType = this.type;\n    }\n  }\n}\n","<ng-content></ng-content>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressbarConfig {\n  /** if `true` changing value of progress bar will be animated */\n  animate = false;\n  /** maximum total value of progress element */\n  max = 100;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BarValue, ProgressbarType } from './progressbar-type.interface';\nimport { ProgressbarConfig } from './progressbar.config';\nimport { BarComponent } from './bar.component';\nimport { NgIf, NgFor } from '@angular/common';\n\n@Component({\n    selector: 'progressbar',\n    templateUrl: './progressbar.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.progress]': 'true',\n        '[attr.max]': 'max'\n    },\n    styles: [`\n    :host {\n      width: 100%;\n      display: flex;\n    } `],\n    standalone: true,\n    imports: [NgIf, BarComponent, NgFor]\n})\nexport class ProgressbarComponent {\n  /** maximum total value of progress element */\n  @Input() max = 100;\n\n  /** if `true` changing value of progress bar will be animated */\n  @Input() animate = false;\n\n  /** If `true`, striped classes are applied */\n  @Input() striped = false;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n  @Input() type?: ProgressbarType;\n\n  /** current value of progress bar. Could be a number or array of objects\n   * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n   */\n  @Input()\n  set value(value: number | BarValue[]) {\n    this.isStacked = Array.isArray(value);\n    if (typeof value === 'number') {\n      this._value = value;\n      this._values = void 0;\n    } else {\n      this._value = void 0;\n      this._values = value;\n    }\n  }\n\n  isStacked = false;\n  _value? = 0;\n  _values?: BarValue[];\n\n  constructor(config: ProgressbarConfig) {\n    Object.assign(this, config);\n  }\n}\n","<ng-container *ngIf=\"!isStacked then NotStacked else Stacked\"></ng-container>\n\n<ng-template #NotStacked>\n  <bar [type]=\"type\" [value]=\"_value\" [max]=\"max\" [animate]=\"animate\" [striped]=\"striped\">\n    <ng-content></ng-content>\n  </bar>\n</ng-template>\n\n<ng-template #Stacked>\n  <bar *ngFor=\"let item of _values\"\n       [type]=\"item.type\" [value]=\"item.value\" [max]=\"item.max || max\" [animate]=\"animate\" [striped]=\"striped\">{{ item.label }}</bar>\n</ng-template>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { BarComponent } from './bar.component';\nimport { ProgressbarComponent } from './progressbar.component';\n\n@NgModule({\n    imports: [BarComponent, ProgressbarComponent],\n    exports: [BarComponent, ProgressbarComponent]\n})\nexport class ProgressbarModule {\n  // @deprecated method not required anymore, will be deleted in v19.0.0\n  static forRoot(): ModuleWithProviders<ProgressbarModule> {\n    return {\n      ngModule: ProgressbarModule,\n      providers: []\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.ProgressbarConfig"],"mappings":"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"}